# Нулевая гипотеза: распределения battery power для телефонов с и без поддержки Wi-Fi согласованы.
# Альтернативная гипотеза: распределения battery power для телефонов с и без поддержки Wi-Fi различаются.

# Для проверки гипотезы мы использовали нае, потому что он основан на предположении,
# что выборки нормально распределены и имеют одинаковое стандартное отклонение.
# Мы вычислили величину t-статистики, которая показывает, насколько средние значения двух выборок отличаются друг от друга в отношении к их общей дисперсии.
# Затем мы вычислили p-значение, которое показывает, насколько вероятно получить такое или более крайнее значение t-статистики при верной нулевой гипотезе.
# Если p-значение меньше уровня значимости, мы отвергаем нулевую гипотезу и заключаем, что средние значения двух выборок различаются, следовательно,
# распределения battery power для телефонов с и без поддержки Wi-Fi также различаются. В противном случае, мы не можем отвергнуть нулевую гипотезу и заключаем,
# что средние значения и распределения battery power для двух групп телефонов согласованы.

import pandas as pd
import scipy.stats as stats
import math

# Уровень значимости
alpha = 0.05

# Данные из CSV
data = pd.read_csv("mobile_phones.csv")

# Разделение данных на две группы
with_wifi = data[data['wifi'] == 1]['battery_power']
without_wifi = data[data['wifi'] == 0]['battery_power']

# Вычисление средних значений и стандартных отклонений для каждой группы
mean_with_wifi = with_wifi.mean()
mean_without_wifi = without_wifi.mean()
std_with_wifi = with_wifi.std()
std_without_wifi = without_wifi.std()

# Вычисление величины t-статистики(показывает, насколько средние значения двух выборок отличаются друг от друга в отношении к их общей дисперсии)
n_with_wifi = len(with_wifi)
n_without_wifi = len(without_wifi)
# Общая оценка стандартного отклонения для двух выборок
s_pooled = math.sqrt(((n_with_wifi - 1) * std_with_wifi**2 + (n_without_wifi - 1) * std_without_wifi**2) / (n_with_wifi + n_without_wifi - 2))
# t-статистика для проверки гипотезы о равенстве средних значений
t_statistic = (mean_with_wifi - mean_without_wifi) / (s_pooled * math.sqrt(1/n_with_wifi + 1/n_without_wifi))

# Вычисление p-значения
p_value = 2 * (1 - stats.t.cdf(abs(t_statistic), n_with_wifi + n_without_wifi - 2))

# Выводим значения статистики теста и p-value
print("Значение t-статистики:", t_statistic)
print("Значение p-value:", p_value)

# Сравниваем значение p-value с уровнем значимости
if p_value < alpha:
    print("Нулевая гипотеза отвергается, распределения battery power различаются для телефонов с и без поддержки Wi-Fi.")
else:
    print("Нулевая гипотеза не отвергается, распределения battery power согласованы для телефонов с и без поддержки Wi-Fi.")
